/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/tooltip/tooltip';
import * as import2 from '@angular/material/core/portal/portal-directives';
import * as import3 from '@angular/material/core/overlay/overlay-directives';
import * as import6 from '@angular/core/src/linker/view';
import * as import7 from '@angular/core/src/linker/element';
import * as import8 from '@angular/core/src/linker/view_utils';
import * as import9 from '@angular/core/src/linker/view_type';
import * as import10 from '@angular/core/src/change_detection/change_detection';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
import * as import13 from './tooltip.css.shim';
var MdTooltipModuleInjector = (function (_super) {
    __extends(MdTooltipModuleInjector, _super);
    function MdTooltipModuleInjector(parent) {
        _super.call(this, parent, [TooltipComponentNgFactory], []);
    }
    MdTooltipModuleInjector.prototype.createInternal = function () {
        this._PortalModule_0 = new import2.PortalModule();
        this._OverlayModule_1 = new import3.OverlayModule();
        this._MdTooltipModule_2 = new import1.MdTooltipModule();
        return this._MdTooltipModule_2;
    };
    MdTooltipModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.PortalModule)) {
            return this._PortalModule_0;
        }
        if ((token === import3.OverlayModule)) {
            return this._OverlayModule_1;
        }
        if ((token === import1.MdTooltipModule)) {
            return this._MdTooltipModule_2;
        }
        return notFoundResult;
    };
    MdTooltipModuleInjector.prototype.destroyInternal = function () {
    };
    return MdTooltipModuleInjector;
}(import0.NgModuleInjector));
export var MdTooltipModuleNgFactory = new import0.NgModuleFactory(MdTooltipModuleInjector, import1.MdTooltipModule);
var renderType_TooltipComponent_Host = null;
var _View_TooltipComponent_Host0 = (function (_super) {
    __extends(_View_TooltipComponent_Host0, _super);
    function _View_TooltipComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TooltipComponent_Host0, renderType_TooltipComponent_Host, import9.ViewType.HOST, viewUtils, parentInjector, declarationEl, import10.ChangeDetectorStatus.CheckAlways);
    }
    _View_TooltipComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('md-tooltip-component', rootSelector, null);
        this._appEl_0 = new import7.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_TooltipComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._TooltipComponent_0_4 = new import1.TooltipComponent();
        this._appEl_0.initComponent(this._TooltipComponent_0_4, [], compView_0);
        compView_0.create(this._TooltipComponent_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_TooltipComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.TooltipComponent) && (0 === requestNodeIndex))) {
            return this._TooltipComponent_0_4;
        }
        return notFoundResult;
    };
    return _View_TooltipComponent_Host0;
}(import6.AppView));
function viewFactory_TooltipComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TooltipComponent_Host === null)) {
        (renderType_TooltipComponent_Host = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, [], {}));
    }
    return new _View_TooltipComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var TooltipComponentNgFactory = new import12.ComponentFactory('md-tooltip-component', viewFactory_TooltipComponent_Host0, import1.TooltipComponent);
var styles_TooltipComponent = [import13.styles];
var renderType_TooltipComponent = null;
var _View_TooltipComponent0 = (function (_super) {
    __extends(_View_TooltipComponent0, _super);
    function _View_TooltipComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TooltipComponent0, renderType_TooltipComponent, import9.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import10.ChangeDetectorStatus.CheckAlways);
    }
    _View_TooltipComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'md-tooltip');
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_0 = import10.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    };
    _View_TooltipComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import8.interpolate(1, '', this.context.message, '');
        if (import8.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setText(this._text_1, currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_TooltipComponent0;
}(import6.AppView));
export function viewFactory_TooltipComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TooltipComponent === null)) {
        (renderType_TooltipComponent = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.Emulated, styles_TooltipComponent, {}));
    }
    return new _View_TooltipComponent0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=/Users/yuelindu/Projects/SitesRun/src/main/webapp/src/aot/node_modules/@angular/material/tooltip/tooltip.ngfactory.js.map