/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/list/list';
import * as import2 from '@angular/material/core/line/line';
import * as import5 from '@angular/core/src/linker/view';
import * as import6 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_utils';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/change_detection';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from './list.css';
import * as import13 from '@angular/core/src/linker/query_list';
import * as import14 from '@angular/core/src/linker/element_ref';
var MdListModuleInjector = (function (_super) {
    __extends(MdListModuleInjector, _super);
    function MdListModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    MdListModuleInjector.prototype.createInternal = function () {
        this._MdLineModule_0 = new import2.MdLineModule();
        this._MdListModule_1 = new import1.MdListModule();
        return this._MdListModule_1;
    };
    MdListModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.MdLineModule)) {
            return this._MdLineModule_0;
        }
        if ((token === import1.MdListModule)) {
            return this._MdListModule_1;
        }
        return notFoundResult;
    };
    MdListModuleInjector.prototype.destroyInternal = function () {
    };
    return MdListModuleInjector;
}(import0.NgModuleInjector));
export var MdListModuleNgFactory = new import0.NgModuleFactory(MdListModuleInjector, import1.MdListModule);
var renderType_MdList_Host = null;
var _View_MdList_Host0 = (function (_super) {
    __extends(_View_MdList_Host0, _super);
    function _View_MdList_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdList_Host0, renderType_MdList_Host, import8.ViewType.HOST, viewUtils, parentInjector, declarationEl, import9.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdList_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('md-list', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'role', 'list');
        this._appEl_0 = new import6.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_MdList0(this.viewUtils, this.injector(0), this._appEl_0);
        this._MdList_0_4 = new import1.MdList();
        this._appEl_0.initComponent(this._MdList_0_4, [], compView_0);
        compView_0.create(this._MdList_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_MdList_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdList) && (0 === requestNodeIndex))) {
            return this._MdList_0_4;
        }
        return notFoundResult;
    };
    return _View_MdList_Host0;
}(import5.AppView));
function viewFactory_MdList_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdList_Host === null)) {
        (renderType_MdList_Host = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, [], {}));
    }
    return new _View_MdList_Host0(viewUtils, parentInjector, declarationEl);
}
export var MdListNgFactory = new import11.ComponentFactory('md-list, md-nav-list', viewFactory_MdList_Host0, import1.MdList);
var styles_MdList = [import12.styles];
var renderType_MdList = null;
var _View_MdList0 = (function (_super) {
    __extends(_View_MdList0, _super);
    function _View_MdList0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdList0, renderType_MdList, import8.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import9.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdList0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this.renderer.projectNodes(parentRenderNode, import7.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this.init([], [], [], []);
        return null;
    };
    return _View_MdList0;
}(import5.AppView));
export function viewFactory_MdList0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdList === null)) {
        (renderType_MdList = viewUtils.createRenderComponentType('', 1, import10.ViewEncapsulation.None, styles_MdList, {}));
    }
    return new _View_MdList0(viewUtils, parentInjector, declarationEl);
}
var renderType_MdListItem_Host = null;
var _View_MdListItem_Host0 = (function (_super) {
    __extends(_View_MdListItem_Host0, _super);
    function _View_MdListItem_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdListItem_Host0, renderType_MdListItem_Host, import8.ViewType.HOST, viewUtils, parentInjector, declarationEl, import9.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdListItem_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('md-list-item', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'role', 'listitem');
        this._appEl_0 = new import6.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_MdListItem0(this.viewUtils, this.injector(0), this._appEl_0);
        this._MdListItem_0_4 = new import1.MdListItem(this.renderer, new import14.ElementRef(this._el_0));
        this._query_MdLine_0_0 = new import13.QueryList();
        this._query_MdListAvatar_0_1 = new import13.QueryList();
        this._appEl_0.initComponent(this._MdListItem_0_4, [], compView_0);
        this._query_MdListAvatar_0_1.reset([]);
        this._MdListItem_0_4._hasAvatar = this._query_MdListAvatar_0_1.first;
        compView_0.create(this._MdListItem_0_4, this.projectableNodes, null);
        var disposable_0 = this.renderer.listen(this._el_0, 'focus', this.eventHandler(this._handle_focus_0_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_0, 'blur', this.eventHandler(this._handle_blur_0_1.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [
            disposable_0,
            disposable_1
        ], []);
        return this._appEl_0;
    };
    _View_MdListItem_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdListItem) && (0 === requestNodeIndex))) {
            return this._MdListItem_0_4;
        }
        return notFoundResult;
    };
    _View_MdListItem_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_MdLine_0_0.dirty) {
                this._query_MdLine_0_0.reset([]);
                this._MdListItem_0_4._lines = this._query_MdLine_0_0;
                this._query_MdLine_0_0.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdListItem_0_4.ngAfterContentInit();
            }
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_MdListItem_Host0.prototype._handle_focus_0_0 = function ($event) {
        this._appEl_0.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._MdListItem_0_4._handleFocus() !== false);
        return (true && pd_0);
    };
    _View_MdListItem_Host0.prototype._handle_blur_0_1 = function ($event) {
        this._appEl_0.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._MdListItem_0_4._handleBlur() !== false);
        return (true && pd_0);
    };
    return _View_MdListItem_Host0;
}(import5.AppView));
function viewFactory_MdListItem_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdListItem_Host === null)) {
        (renderType_MdListItem_Host = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, [], {}));
    }
    return new _View_MdListItem_Host0(viewUtils, parentInjector, declarationEl);
}
export var MdListItemNgFactory = new import11.ComponentFactory('md-list-item, a[md-list-item]', viewFactory_MdListItem_Host0, import1.MdListItem);
var styles_MdListItem = [];
var renderType_MdListItem = null;
var _View_MdListItem0 = (function (_super) {
    __extends(_View_MdListItem0, _super);
    function _View_MdListItem0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdListItem0, renderType_MdListItem, import8.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import9.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdListItem0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'md-list-item');
        this._text_1 = this.renderer.createText(this._el_0, '\n  ', null);
        this.renderer.projectNodes(this._el_0, import7.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this._text_2 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_3 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'md-list-text');
        this.renderer.projectNodes(this._el_3, import7.flattenNestedViewRenderNodes(this.projectableNodes[1]));
        this._text_4 = this.renderer.createText(this._el_0, '\n  ', null);
        this.renderer.projectNodes(this._el_0, import7.flattenNestedViewRenderNodes(this.projectableNodes[2]));
        this._text_5 = this.renderer.createText(this._el_0, '\n', null);
        this._text_6 = this.renderer.createText(parentRenderNode, '\n', null);
        this._expr_0 = import9.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._text_5,
            this._text_6
        ], [], []);
        return null;
    };
    _View_MdListItem0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this.context._hasFocus;
        if (import7.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementClass(this._el_0, 'md-list-item-focus', currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_MdListItem0;
}(import5.AppView));
export function viewFactory_MdListItem0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdListItem === null)) {
        (renderType_MdListItem = viewUtils.createRenderComponentType('', 3, import10.ViewEncapsulation.None, styles_MdListItem, {}));
    }
    return new _View_MdListItem0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=/Users/yuelindu/Projects/SitesRun/src/main/webapp/src/aot/node_modules/@angular/material/list/list.ngfactory.js.map