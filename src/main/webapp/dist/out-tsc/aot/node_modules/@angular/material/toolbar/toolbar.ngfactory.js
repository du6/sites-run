/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/toolbar/toolbar';
import * as import4 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from './toolbar.css';
var MdToolbarModuleInjector = (function (_super) {
    __extends(MdToolbarModuleInjector, _super);
    function MdToolbarModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    MdToolbarModuleInjector.prototype.createInternal = function () {
        this._MdToolbarModule_0 = new import1.MdToolbarModule();
        return this._MdToolbarModule_0;
    };
    MdToolbarModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import1.MdToolbarModule)) {
            return this._MdToolbarModule_0;
        }
        return notFoundResult;
    };
    MdToolbarModuleInjector.prototype.destroyInternal = function () {
    };
    return MdToolbarModuleInjector;
}(import0.NgModuleInjector));
export var MdToolbarModuleNgFactory = new import0.NgModuleFactory(MdToolbarModuleInjector, import1.MdToolbarModule);
var renderType_MdToolbar_Host = null;
var _View_MdToolbar_Host0 = (function (_super) {
    __extends(_View_MdToolbar_Host0, _super);
    function _View_MdToolbar_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdToolbar_Host0, renderType_MdToolbar_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdToolbar_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('md-toolbar', rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_MdToolbar0(this.viewUtils, this.injector(0), this._appEl_0);
        this._MdToolbar_0_4 = new import1.MdToolbar(new import9.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._MdToolbar_0_4, [], compView_0);
        compView_0.create(this._MdToolbar_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_MdToolbar_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdToolbar) && (0 === requestNodeIndex))) {
            return this._MdToolbar_0_4;
        }
        return notFoundResult;
    };
    return _View_MdToolbar_Host0;
}(import4.AppView));
function viewFactory_MdToolbar_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdToolbar_Host === null)) {
        (renderType_MdToolbar_Host = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, [], {}));
    }
    return new _View_MdToolbar_Host0(viewUtils, parentInjector, declarationEl);
}
export var MdToolbarNgFactory = new import11.ComponentFactory('md-toolbar', viewFactory_MdToolbar_Host0, import1.MdToolbar);
var styles_MdToolbar = [import12.styles];
var renderType_MdToolbar = null;
var _View_MdToolbar0 = (function (_super) {
    __extends(_View_MdToolbar0, _super);
    function _View_MdToolbar0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdToolbar0, renderType_MdToolbar, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckOnce);
    }
    _View_MdToolbar0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'md-toolbar-layout');
        this._text_1 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'md-toolbar-row', null);
        this._MdToolbarRow_2_3 = new import1.MdToolbarRow();
        this._text_3 = this.renderer.createText(this._el_2, '\n    ', null);
        this.renderer.projectNodes(this._el_2, import6.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this._text_4 = this.renderer.createText(this._el_2, '\n  ', null);
        this._text_5 = this.renderer.createText(this._el_0, '\n  ', null);
        this.renderer.projectNodes(this._el_0, import6.flattenNestedViewRenderNodes(this.projectableNodes[1]));
        this._text_6 = this.renderer.createText(this._el_0, '\n', null);
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._text_5,
            this._text_6
        ], [], []);
        return null;
    };
    _View_MdToolbar0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdToolbarRow) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._MdToolbarRow_2_3;
        }
        return notFoundResult;
    };
    return _View_MdToolbar0;
}(import4.AppView));
export function viewFactory_MdToolbar0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdToolbar === null)) {
        (renderType_MdToolbar = viewUtils.createRenderComponentType('', 2, import10.ViewEncapsulation.None, styles_MdToolbar, {}));
    }
    return new _View_MdToolbar0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=/Users/yuelindu/Projects/SitesRun/src/main/webapp/src/aot/node_modules/@angular/material/toolbar/toolbar.ngfactory.js.map