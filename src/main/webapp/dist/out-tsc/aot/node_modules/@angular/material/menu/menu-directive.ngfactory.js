/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '@angular/material/menu/menu-directive';
import * as import4 from '@angular/core/src/linker/query_list';
import * as import5 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './menu.css';
import * as import12 from '@angular/common/src/directives/ng_if';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/common/src/directives/ng_class';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/core/src/linker/element_ref';
var renderType_MdMenu_Host = null;
var _View_MdMenu_Host0 = (function (_super) {
    __extends(_View_MdMenu_Host0, _super);
    function _View_MdMenu_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdMenu_Host0, renderType_MdMenu_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdMenu_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('md-menu', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'role', 'menu');
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_MdMenu0(this.viewUtils, this.injector(0), this._appEl_0);
        this._MdMenu_0_4 = new import3.MdMenu(null, null);
        this._query_MdMenuItem_0_0 = new import4.QueryList();
        this._appEl_0.initComponent(this._MdMenu_0_4, [], compView_0);
        compView_0.create(this._MdMenu_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_MdMenu_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.MdMenu) && (0 === requestNodeIndex))) {
            return this._MdMenu_0_4;
        }
        return notFoundResult;
    };
    _View_MdMenu_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_MdMenuItem_0_0.dirty) {
                this._query_MdMenuItem_0_0.reset([]);
                this._MdMenu_0_4.items = this._query_MdMenuItem_0_0;
                this._query_MdMenuItem_0_0.notifyOnChanges();
            }
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_MdMenu_Host0;
}(import1.AppView));
function viewFactory_MdMenu_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdMenu_Host === null)) {
        (renderType_MdMenu_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_MdMenu_Host0(viewUtils, parentInjector, declarationEl);
}
export var MdMenuNgFactory = new import10.ComponentFactory('md-menu', viewFactory_MdMenu_Host0, import3.MdMenu);
var styles_MdMenu = [import11.styles];
var renderType_MdMenu = null;
var _View_MdMenu0 = (function (_super) {
    __extends(_View_MdMenu0, _super);
    function _View_MdMenu0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdMenu0, renderType_MdMenu, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdMenu0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_TemplateRef_0 = new import4.QueryList();
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._anchor_0);
        this._TemplateRef_0_4 = new import13.TemplateRef_(this._appEl_0, viewFactory_MdMenu1);
        this._text_1 = this.renderer.createText(parentRenderNode, '\n', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_2 = new import2.AppElement(2, null, this, this._anchor_2);
        this._TemplateRef_2_5 = new import13.TemplateRef_(this._appEl_2, viewFactory_MdMenu2);
        this._NgIf_2_6 = new import12.NgIf(this._appEl_2.vcRef, this._TemplateRef_2_5);
        this._expr_0 = import8.UNINITIALIZED;
        this._viewQuery_TemplateRef_0.reset([
            this._TemplateRef_0_4,
            this._TemplateRef_2_5
        ]);
        this.context.templateRef = this._viewQuery_TemplateRef_0.first;
        this.init([], [
            this._anchor_0,
            this._text_1,
            this._anchor_2
        ], [], []);
        return null;
    };
    _View_MdMenu0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_4;
        }
        if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import12.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6;
        }
        return notFoundResult;
    };
    _View_MdMenu0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context._showClickCatcher;
        if (import5.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgIf_2_6.ngIf = currVal_0;
            this._expr_0 = currVal_0;
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_MdMenu0;
}(import1.AppView));
export function viewFactory_MdMenu0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdMenu === null)) {
        (renderType_MdMenu = viewUtils.createRenderComponentType('', 1, import9.ViewEncapsulation.None, styles_MdMenu, {}));
    }
    return new _View_MdMenu0(viewUtils, parentInjector, declarationEl);
}
var _View_MdMenu1 = (function (_super) {
    __extends(_View_MdMenu1, _super);
    function _View_MdMenu1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdMenu1, renderType_MdMenu, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdMenu1.prototype.createInternal = function (rootSelector) {
        this._text_0 = this.renderer.createText(null, '\n  ', null);
        this._el_1 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'md-menu');
        this._NgClass_1_3 = new import14.NgClass(this.parentInjector.get(import15.IterableDiffers), this.parentInjector.get(import16.KeyValueDiffers), new import17.ElementRef(this._el_1), this.renderer);
        this._text_2 = this.renderer.createText(this._el_1, '\n    ', null);
        this.renderer.projectNodes(this._el_1, import5.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this._text_3 = this.renderer.createText(this._el_1, '\n  ', null);
        this._text_4 = this.renderer.createText(null, '\n', null);
        var disposable_0 = this.renderer.listen(this._el_1, 'click', this.eventHandler(this._handle_click_1_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_1, 'keydown', this.eventHandler(this._handle_keydown_1_1.bind(this)));
        this._expr_2 = import8.UNINITIALIZED;
        this._expr_3 = import8.UNINITIALIZED;
        this.init([].concat([
            this._text_0,
            this._el_1,
            this._text_4
        ]), [
            this._text_0,
            this._el_1,
            this._text_2,
            this._text_3,
            this._text_4
        ], [
            disposable_0,
            disposable_1
        ], []);
        return null;
    };
    _View_MdMenu1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._NgClass_1_3;
        }
        return notFoundResult;
    };
    _View_MdMenu1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = 'md-menu';
        if (import5.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._NgClass_1_3.klass = currVal_2;
            this._expr_2 = currVal_2;
        }
        var currVal_3 = this.parent.context._classList;
        if (import5.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this._NgClass_1_3.ngClass = currVal_3;
            this._expr_3 = currVal_3;
        }
        if (!throwOnChange) {
            this._NgClass_1_3.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_MdMenu1.prototype._handle_click_1_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context._emitCloseEvent() !== false);
        return (true && pd_0);
    };
    _View_MdMenu1.prototype._handle_keydown_1_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context._handleKeydown($event) !== false);
        return (true && pd_0);
    };
    return _View_MdMenu1;
}(import1.AppView));
function viewFactory_MdMenu1(viewUtils, parentInjector, declarationEl) {
    return new _View_MdMenu1(viewUtils, parentInjector, declarationEl);
}
var _View_MdMenu2 = (function (_super) {
    __extends(_View_MdMenu2, _super);
    function _View_MdMenu2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdMenu2, renderType_MdMenu, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdMenu2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'md-menu-click-catcher');
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [disposable_0], []);
        return null;
    };
    _View_MdMenu2.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context._emitCloseEvent() !== false);
        return (true && pd_0);
    };
    return _View_MdMenu2;
}(import1.AppView));
function viewFactory_MdMenu2(viewUtils, parentInjector, declarationEl) {
    return new _View_MdMenu2(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=/Users/yuelindu/Projects/SitesRun/src/main/webapp/src/aot/node_modules/@angular/material/menu/menu-directive.ngfactory.js.map