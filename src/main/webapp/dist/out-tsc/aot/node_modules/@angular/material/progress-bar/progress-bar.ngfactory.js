/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/progress-bar/progress-bar';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/element';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/linker/view_type';
import * as import11 from '@angular/core/src/change_detection/change_detection';
import * as import12 from '@angular/core/src/metadata/view';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from './progress-bar.css.shim';
import * as import15 from '@angular/common/src/directives/ng_style';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/core/src/linker/element_ref';
var MdProgressBarModuleInjector = (function (_super) {
    __extends(MdProgressBarModuleInjector, _super);
    function MdProgressBarModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(MdProgressBarModuleInjector.prototype, "_NgLocalization_2", {
        get: function () {
            if ((this.__NgLocalization_2 == null)) {
                (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID)));
            }
            return this.__NgLocalization_2;
        },
        enumerable: true,
        configurable: true
    });
    MdProgressBarModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._MdProgressBarModule_1 = new import1.MdProgressBarModule();
        return this._MdProgressBarModule_1;
    };
    MdProgressBarModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import1.MdProgressBarModule)) {
            return this._MdProgressBarModule_1;
        }
        if ((token === import3.NgLocalization)) {
            return this._NgLocalization_2;
        }
        return notFoundResult;
    };
    MdProgressBarModuleInjector.prototype.destroyInternal = function () {
    };
    return MdProgressBarModuleInjector;
}(import0.NgModuleInjector));
export var MdProgressBarModuleNgFactory = new import0.NgModuleFactory(MdProgressBarModuleInjector, import1.MdProgressBarModule);
var renderType_MdProgressBar_Host = null;
var _View_MdProgressBar_Host0 = (function (_super) {
    __extends(_View_MdProgressBar_Host0, _super);
    function _View_MdProgressBar_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdProgressBar_Host0, renderType_MdProgressBar_Host, import10.ViewType.HOST, viewUtils, parentInjector, declarationEl, import11.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdProgressBar_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('md-progress-bar', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'aria-valuemax', '100');
        this.renderer.setElementAttribute(this._el_0, 'aria-valuemin', '0');
        this.renderer.setElementAttribute(this._el_0, 'role', 'progressbar');
        this._appEl_0 = new import8.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_MdProgressBar0(this.viewUtils, this.injector(0), this._appEl_0);
        this._MdProgressBar_0_4 = new import1.MdProgressBar();
        this._appEl_0.initComponent(this._MdProgressBar_0_4, [], compView_0);
        compView_0.create(this._MdProgressBar_0_4, this.projectableNodes, null);
        this._expr_0 = import11.UNINITIALIZED;
        this._expr_1 = import11.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_MdProgressBar_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdProgressBar) && (0 === requestNodeIndex))) {
            return this._MdProgressBar_0_4;
        }
        return notFoundResult;
    };
    _View_MdProgressBar_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this._MdProgressBar_0_4.value;
        if (import9.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-valuenow', ((currVal_0 == null) ? null : currVal_0.toString()));
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this._MdProgressBar_0_4.mode;
        if (import9.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_0, 'mode', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_MdProgressBar_Host0;
}(import7.AppView));
function viewFactory_MdProgressBar_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdProgressBar_Host === null)) {
        (renderType_MdProgressBar_Host = viewUtils.createRenderComponentType('', 0, import12.ViewEncapsulation.None, [], {}));
    }
    return new _View_MdProgressBar_Host0(viewUtils, parentInjector, declarationEl);
}
export var MdProgressBarNgFactory = new import13.ComponentFactory('md-progress-bar', viewFactory_MdProgressBar_Host0, import1.MdProgressBar);
var styles_MdProgressBar = [import14.styles];
var renderType_MdProgressBar = null;
var _View_MdProgressBar0 = (function (_super) {
    __extends(_View_MdProgressBar0, _super);
    function _View_MdProgressBar0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdProgressBar0, renderType_MdProgressBar, import10.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import11.ChangeDetectorStatus.CheckOnce);
    }
    _View_MdProgressBar0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'md-progress-bar-background');
        this._text_2 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_3 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'md-progress-bar-buffer');
        this._NgStyle_3_3 = new import15.NgStyle(this.parentInjector.get(import16.KeyValueDiffers), new import17.ElementRef(this._el_3), this.renderer);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_5 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_5, 'class', 'md-progress-bar-primary md-progress-bar-fill');
        this._NgStyle_5_3 = new import15.NgStyle(this.parentInjector.get(import16.KeyValueDiffers), new import17.ElementRef(this._el_5), this.renderer);
        this._text_6 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_7 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_7, 'class', 'md-progress-bar-secondary md-progress-bar-fill');
        this._text_8 = this.renderer.createText(parentRenderNode, '\n', null);
        this._expr_0 = import11.UNINITIALIZED;
        this._expr_1 = import11.UNINITIALIZED;
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8
        ], [], []);
        return null;
    };
    _View_MdProgressBar0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import15.NgStyle) && (3 === requestNodeIndex))) {
            return this._NgStyle_3_3;
        }
        if (((token === import15.NgStyle) && (5 === requestNodeIndex))) {
            return this._NgStyle_5_3;
        }
        return notFoundResult;
    };
    _View_MdProgressBar0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context._bufferTransform();
        if (import9.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgStyle_3_3.ngStyle = currVal_0;
            this._expr_0 = currVal_0;
        }
        if (!throwOnChange) {
            this._NgStyle_3_3.ngDoCheck();
        }
        var currVal_1 = this.context._primaryTransform();
        if (import9.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgStyle_5_3.ngStyle = currVal_1;
            this._expr_1 = currVal_1;
        }
        if (!throwOnChange) {
            this._NgStyle_5_3.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_MdProgressBar0;
}(import7.AppView));
export function viewFactory_MdProgressBar0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdProgressBar === null)) {
        (renderType_MdProgressBar = viewUtils.createRenderComponentType('', 0, import12.ViewEncapsulation.Emulated, styles_MdProgressBar, {}));
    }
    return new _View_MdProgressBar0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=/Users/yuelindu/Projects/SitesRun/src/main/webapp/src/aot/node_modules/@angular/material/progress-bar/progress-bar.ngfactory.js.map