/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/progress-circle/progress-circle';
import * as import4 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './progress-circle.css.shim';
var MdProgressCircleModuleInjector = (function (_super) {
    __extends(MdProgressCircleModuleInjector, _super);
    function MdProgressCircleModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    MdProgressCircleModuleInjector.prototype.createInternal = function () {
        this._MdProgressCircleModule_0 = new import1.MdProgressCircleModule();
        return this._MdProgressCircleModule_0;
    };
    MdProgressCircleModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import1.MdProgressCircleModule)) {
            return this._MdProgressCircleModule_0;
        }
        return notFoundResult;
    };
    MdProgressCircleModuleInjector.prototype.destroyInternal = function () {
    };
    return MdProgressCircleModuleInjector;
}(import0.NgModuleInjector));
export var MdProgressCircleModuleNgFactory = new import0.NgModuleFactory(MdProgressCircleModuleInjector, import1.MdProgressCircleModule);
var renderType_MdProgressCircle_Host = null;
var _View_MdProgressCircle_Host0 = (function (_super) {
    __extends(_View_MdProgressCircle_Host0, _super);
    function _View_MdProgressCircle_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdProgressCircle_Host0, renderType_MdProgressCircle_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdProgressCircle_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('md-progress-circle', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'role', 'progressbar');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_MdProgressCircle0(this.viewUtils, this.injector(0), this._appEl_0);
        this._MdProgressCircle_0_4 = new import1.MdProgressCircle(compView_0.ref);
        this._appEl_0.initComponent(this._MdProgressCircle_0_4, [], compView_0);
        compView_0.create(this._MdProgressCircle_0_4, this.projectableNodes, null);
        this._expr_0 = import8.UNINITIALIZED;
        this._expr_1 = import8.UNINITIALIZED;
        this._expr_2 = import8.UNINITIALIZED;
        this._expr_3 = import8.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_MdProgressCircle_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdProgressCircle) && (0 === requestNodeIndex))) {
            return this._MdProgressCircle_0_4;
        }
        return notFoundResult;
    };
    _View_MdProgressCircle_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this._MdProgressCircle_0_4._ariaValueMin;
        if (import6.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-valuemin', ((currVal_0 == null) ? null : currVal_0.toString()));
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this._MdProgressCircle_0_4._ariaValueMax;
        if (import6.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-valuemax', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this._MdProgressCircle_0_4.value;
        if (import6.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-valuenow', ((currVal_2 == null) ? null : currVal_2.toString()));
            this._expr_2 = currVal_2;
        }
        var currVal_3 = this._MdProgressCircle_0_4.mode;
        if (import6.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementAttribute(this._el_0, 'mode', ((currVal_3 == null) ? null : currVal_3.toString()));
            this._expr_3 = currVal_3;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_MdProgressCircle_Host0.prototype.destroyInternal = function () {
        this._MdProgressCircle_0_4.ngOnDestroy();
    };
    return _View_MdProgressCircle_Host0;
}(import4.AppView));
function viewFactory_MdProgressCircle_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdProgressCircle_Host === null)) {
        (renderType_MdProgressCircle_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_MdProgressCircle_Host0(viewUtils, parentInjector, declarationEl);
}
export var MdProgressCircleNgFactory = new import10.ComponentFactory('md-progress-circle', viewFactory_MdProgressCircle_Host0, import1.MdProgressCircle);
var styles_MdProgressCircle = [import11.styles];
var renderType_MdProgressCircle = null;
var _View_MdProgressCircle0 = (function (_super) {
    __extends(_View_MdProgressCircle0, _super);
    function _View_MdProgressCircle0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdProgressCircle0, renderType_MdProgressCircle, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckOnce);
    }
    _View_MdProgressCircle0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_1 = this.renderer.createElement(parentRenderNode, ':svg:svg', null);
        this.renderer.setElementAttribute(this._el_1, 'preserveAspectRatio', 'xMidYMid meet');
        this.renderer.setElementAttribute(this._el_1, 'viewBox', '0 0 100 100');
        this._text_2 = this.renderer.createText(this._el_1, '\n  ', null);
        this._el_3 = this.renderer.createElement(this._el_1, ':svg:path', null);
        this._text_4 = this.renderer.createText(this._el_1, '\n', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n', null);
        this._expr_0 = import8.UNINITIALIZED;
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._text_5
        ], [], []);
        return null;
    };
    _View_MdProgressCircle0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this.context.currentPath;
        if (import6.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementAttribute(this._el_3, 'd', ((currVal_0 == null) ? null : currVal_0.toString()));
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_MdProgressCircle0;
}(import4.AppView));
export function viewFactory_MdProgressCircle0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdProgressCircle === null)) {
        (renderType_MdProgressCircle = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.Emulated, styles_MdProgressCircle, {}));
    }
    return new _View_MdProgressCircle0(viewUtils, parentInjector, declarationEl);
}
var renderType_MdSpinner_Host = null;
var _View_MdSpinner_Host0 = (function (_super) {
    __extends(_View_MdSpinner_Host0, _super);
    function _View_MdSpinner_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdSpinner_Host0, renderType_MdSpinner_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdSpinner_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('md-spinner', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'mode', 'indeterminate');
        this.renderer.setElementAttribute(this._el_0, 'role', 'progressbar');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_MdSpinner0(this.viewUtils, this.injector(0), this._appEl_0);
        this._MdSpinner_0_4 = new import1.MdSpinner(compView_0.ref);
        this._appEl_0.initComponent(this._MdSpinner_0_4, [], compView_0);
        compView_0.create(this._MdSpinner_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_MdSpinner_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdSpinner) && (0 === requestNodeIndex))) {
            return this._MdSpinner_0_4;
        }
        return notFoundResult;
    };
    return _View_MdSpinner_Host0;
}(import4.AppView));
function viewFactory_MdSpinner_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdSpinner_Host === null)) {
        (renderType_MdSpinner_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_MdSpinner_Host0(viewUtils, parentInjector, declarationEl);
}
export var MdSpinnerNgFactory = new import10.ComponentFactory('md-spinner', viewFactory_MdSpinner_Host0, import1.MdSpinner);
var styles_MdSpinner = [import11.styles];
var renderType_MdSpinner = null;
var _View_MdSpinner0 = (function (_super) {
    __extends(_View_MdSpinner0, _super);
    function _View_MdSpinner0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MdSpinner0, renderType_MdSpinner, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_MdSpinner0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_1 = this.renderer.createElement(parentRenderNode, ':svg:svg', null);
        this.renderer.setElementAttribute(this._el_1, 'preserveAspectRatio', 'xMidYMid meet');
        this.renderer.setElementAttribute(this._el_1, 'viewBox', '0 0 100 100');
        this._text_2 = this.renderer.createText(this._el_1, '\n  ', null);
        this._el_3 = this.renderer.createElement(this._el_1, ':svg:path', null);
        this._text_4 = this.renderer.createText(this._el_1, '\n', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n', null);
        this._expr_0 = import8.UNINITIALIZED;
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._text_5
        ], [], []);
        return null;
    };
    _View_MdSpinner0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this.context.currentPath;
        if (import6.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementAttribute(this._el_3, 'd', ((currVal_0 == null) ? null : currVal_0.toString()));
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_MdSpinner0;
}(import4.AppView));
export function viewFactory_MdSpinner0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MdSpinner === null)) {
        (renderType_MdSpinner = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.Emulated, styles_MdSpinner, {}));
    }
    return new _View_MdSpinner0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=/Users/yuelindu/Projects/SitesRun/src/main/webapp/src/aot/node_modules/@angular/material/progress-circle/progress-circle.ngfactory.js.map